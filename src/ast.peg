expression -> logical_or ;
logical_or -> logical_and ( "OR" logical_and )* ;
logical_and -> equality ( "AND" equality )* ;

equality -> comparison ( ( "==" | "!=" ) comparison )* ;
comparison -> addition ( ( ">" | ">=" | "<=" | "<" ) addition )* ;
addition -> multiplication ( ( "-" | "+" ) multiplication )* ;
multiplication -> unary ( ( "/" | "*" ) unary )* ;
unary -> ( "!" | "-" ) unary | primary ;


primary -> "(" expression ")"
    | func_call
    | access
    | list
    | LITERAL
    | IDENT

func_call -> IDENT "(" arguments? ")" ;

arguments -> expression ( "," expression )* ;

access -> primary ( "[" expr "]" )*

list -> "[" arguments? "]" ;


LITERAL -> "TRUE" | "FALSE" | "NULL" | NUMBER | STRING

